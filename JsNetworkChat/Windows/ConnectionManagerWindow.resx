<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>